{"ast":null,"code":"import { roads } from '../../data';\nexport function isCityInRoad(city, road) {\n  return city.toLowerCase() === road.a.toLowerCase() || city.toLowerCase() === road.b.toLowerCase();\n}\nexport function getRoadFromList(cityA, cityB) {\n  let result = 'noCity';\n  roads.forEach(road => {\n    if (isCityInRoad(cityA, road) && isCityInRoad(cityB, road)) result = road;\n  });\n  return result;\n}\nexport function formatTime(time) {\n  if (time) {\n    const splitedTime = time.split(':');\n    const hours = splitedTime[0];\n    const minutes = splitedTime[1];\n    const minutesWithSuffix = minutes ? minutes + ' минут' : '';\n    return hours + getHoursSuffix(+hours) + ' ' + minutesWithSuffix;\n  }\n}\n\nfunction getHoursSuffix(hours) {\n  if (hours % 10 === 1) return ' час';\n  if (+hours >= 5 && +hours < 20) return ' часов';\n  const chasaArr = [2, 3, 4];\n  if (chasaArr.includes(+hours % 10)) return ' часa';\n  const chasovArr = [5, 6, 7, 8, 9, 0];\n  if (chasovArr.includes(+hours % 10)) return ' часов';\n}","map":{"version":3,"names":["roads","isCityInRoad","city","road","toLowerCase","a","b","getRoadFromList","cityA","cityB","result","forEach","formatTime","time","splitedTime","split","hours","minutes","minutesWithSuffix","getHoursSuffix","chasaArr","includes","chasovArr"],"sources":["/Users/eepodrezov/Desktop/web/naked/travelReact/src/components/CitiesForm/utils.js"],"sourcesContent":["import { roads } from '../../data'\n\nexport function isCityInRoad(city, road) {\n    return city.toLowerCase() === road.a.toLowerCase()\n    || city.toLowerCase() === road.b.toLowerCase()\n}\n\nexport function getRoadFromList(cityA, cityB) {\n    let result = 'noCity'\n    roads.forEach(road => {\n        if (isCityInRoad(cityA, road) && isCityInRoad(cityB, road)) result = road\n    })\n    return result\n}\n\nexport function formatTime(time) {\n    if (time) {\n        const splitedTime = time.split(':')\n        const hours = splitedTime[0]\n        const minutes = splitedTime[1]\n        const minutesWithSuffix = minutes ? minutes + ' минут' : ''\n        return hours + getHoursSuffix(+hours) + ' ' + minutesWithSuffix\n    }\n}\n\nfunction getHoursSuffix(hours) {\n    if (hours % 10 === 1) return ' час'\n    if (+hours >= 5 && +hours < 20) return ' часов'\n    const chasaArr = [2,3,4]\n    if (chasaArr.includes(+hours % 10)) return ' часa'\n    const chasovArr = [5,6,7,8,9,0]\n    if (chasovArr.includes(+hours % 10)) return ' часов'\n\n}"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AAEA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;EACrC,OAAOD,IAAI,CAACE,WAAL,OAAuBD,IAAI,CAACE,CAAL,CAAOD,WAAP,EAAvB,IACJF,IAAI,CAACE,WAAL,OAAuBD,IAAI,CAACG,CAAL,CAAOF,WAAP,EAD1B;AAEH;AAED,OAAO,SAASG,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;EAC1C,IAAIC,MAAM,GAAG,QAAb;EACAV,KAAK,CAACW,OAAN,CAAcR,IAAI,IAAI;IAClB,IAAIF,YAAY,CAACO,KAAD,EAAQL,IAAR,CAAZ,IAA6BF,YAAY,CAACQ,KAAD,EAAQN,IAAR,CAA7C,EAA4DO,MAAM,GAAGP,IAAT;EAC/D,CAFD;EAGA,OAAOO,MAAP;AACH;AAED,OAAO,SAASE,UAAT,CAAoBC,IAApB,EAA0B;EAC7B,IAAIA,IAAJ,EAAU;IACN,MAAMC,WAAW,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAApB;IACA,MAAMC,KAAK,GAAGF,WAAW,CAAC,CAAD,CAAzB;IACA,MAAMG,OAAO,GAAGH,WAAW,CAAC,CAAD,CAA3B;IACA,MAAMI,iBAAiB,GAAGD,OAAO,GAAGA,OAAO,GAAG,QAAb,GAAwB,EAAzD;IACA,OAAOD,KAAK,GAAGG,cAAc,CAAC,CAACH,KAAF,CAAtB,GAAiC,GAAjC,GAAuCE,iBAA9C;EACH;AACJ;;AAED,SAASC,cAAT,CAAwBH,KAAxB,EAA+B;EAC3B,IAAIA,KAAK,GAAG,EAAR,KAAe,CAAnB,EAAsB,OAAO,MAAP;EACtB,IAAI,CAACA,KAAD,IAAU,CAAV,IAAe,CAACA,KAAD,GAAS,EAA5B,EAAgC,OAAO,QAAP;EAChC,MAAMI,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAjB;EACA,IAAIA,QAAQ,CAACC,QAAT,CAAkB,CAACL,KAAD,GAAS,EAA3B,CAAJ,EAAoC,OAAO,OAAP;EACpC,MAAMM,SAAS,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAlB;EACA,IAAIA,SAAS,CAACD,QAAV,CAAmB,CAACL,KAAD,GAAS,EAA5B,CAAJ,EAAqC,OAAO,QAAP;AAExC"},"metadata":{},"sourceType":"module"}